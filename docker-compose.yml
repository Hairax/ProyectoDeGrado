version: '3.8'

services:
  traefik:
    image: "traefik:v2.9"
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - backend

  gateway:
    build:
      context: .
      dockerfile: apps/apigateway/Dockerfile
    env_file:
      - .env
    depends_on:
      - auth-service
      - orders-service
      - users-service
      - ops-service
      - bi-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=Host(`localhost`)"
      - "traefik.http.services.gateway.loadbalancer.server.port=8081"
    networks:
      - backend

  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - db_core
      - db_audit
    networks:
      - backend

  orders-service:
    build:
      context: .
      dockerfile: apps/orders-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - db_core
      - db_audit
    networks:
      - backend

  users-service:
    build:
      context: .
      dockerfile: apps/users-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - db_core
      - db_audit
    networks:
      - backend

  ops-service:
    build:
      context: .
      dockerfile: apps/ops-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - db_core
      - db_audit
    networks:
      - backend

  bi-service:
    build:
      context: .
      dockerfile: apps/bi-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - db_bi
    networks:
      - backend

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    depends_on:
      - traefik
    networks:
      - backend

  db_core:
    image: mysql:8
    container_name: db_core
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_CORE}
    volumes:
      - db_core_data:/var/lib/mysql
    networks:
      - backend

  db_bi:
    image: mysql:8
    container_name: db_bi
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_BI}
    volumes:
      - db_bi_data:/var/lib/mysql
    networks:
      - backend

  db_audit:
    image: mysql:8
    container_name: db_audit
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_AUDIT}
    volumes:
      - db_audit_data:/var/lib/mysql
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  db_core_data:
  db_bi_data:
  db_audit_data:
